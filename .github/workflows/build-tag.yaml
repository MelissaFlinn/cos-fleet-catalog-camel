name: Build and Deploy Catalog from Tag

on:
  push:
    tags:
      - "v*"
    paths-ignore:
      - 'LICENSE'
      - '**/.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - 'etc/kubernetes/manifests/**'
  workflow_dispatch:

env:
  LANG: en_US.UTF-8
  MAVEN_OPTS: -Xmx3000m
  MAVEN_ARGS: -V -ntp -Dhttp.keepAlive=false -DskipTests=true -e
  CONNECTORS_DIR: etc/kubernetes/manifests/base
  IMAGE_REPO_USERNAME: ${{secrets.IMAGE_REPO_USERNAME}}
  IMAGE_REPO_PASSWORD: ${{secrets.IMAGE_REPO_PASSWORD}}
  IMAGE_TAG: ${{ github.ref_name}}-${{ github.sha }}
  DEPLOY_TAG: ${{ github.ref_name}}-${{ github.sha }}
  OC_PROJECT: ${{ secrets.K8S_CLUSTER_DEV_NAMESPACE }}

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      #- name: Build Project
      #  run: |          
      #    ./mvnw ${MAVEN_ARGS} clean install \
      #      -Dcos.connector.container.tag=${IMAGE_TAG} \
      #      -Pcontainer-build

      - name: Regen
        run: |          
          ./gen_manifests.sh
      - name: "Tar Catalog ${{ env.IMAGE_TAG }}"
        shell: bash
        run: |
          ls -la
          ls -la ${CONNECTORS_DIR}
          tar -czf ${{ runner.temp }}/catalog.tgz -C ~ ${CONNECTORS_DIR}
          ls -lh ${{ runner.temp }}/catalog.tgz

      - name: "Persist Catalog ${{ env.IMAGE_TAG }}"
        uses: actions/upload-artifact@v2
        with:
          name: catalog-${IMAGE_TAG}
          path: ${{ runner.temp }}/catalog.tgz
          retention-days: 1

      #- name: Login to Container Registry
      #  uses: docker/login-action@v1
      #  with:
      #    registry: quay.io
      #    username: ${{ secrets.QUAY_MCI_USR }}
      #    password: ${{ secrets.QUAY_MCI_PWD }}
      #- name: Push Container Images
      #  run: |
      #    IMAGES=$(docker image ls --format "{{.Repository}}:{{.Tag}}" | grep quay.io/rhoas/cos-connector-)
      #    for IMAGE in ${IMAGES}; do          
      #        docker push $IMAGE
      #    done


  kustomize:
    needs: "build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        overlay:
          - "staging"
  
    steps:

      - name: "Download Catalog ${{ env.IMAGE_TAG }}"
        uses: actions/download-artifact@v2
        with:
          name: catalog-${IMAGE_TAG}
          path: ..
      - name: "Extract Catalog  ${{ env.IMAGE_TAG }}"
        shell: bash
        run: |
          tar -xzf ../catalog.tgz -C ~
          ls -la
